{"version":3,"sources":["../../src/TableEx/index.jsx"],"names":["React","Component","Table","_","Fetch","PAGINATION","defaultPageSize","defaultCurrent","current","showSizeChanger","showQuickJumper","TableEx","props","refresh","newParams","isMergeLast","params","Object","assign","last","state","history","setState","concat","onChange","pagination","filters","sorter","isEqual","filterParam","columnKey","field","order","isNumber","currentPage","pageSize","newPagination","onCurrentPageChange","setData","data","dataSource","get","isArray","console","error","total","onFetchResponse","res","requestParams","onResponse","onFetchRequest","onRequest","loading","nextProps","setTimeout","className","style","api","defaultProps","reqParams","columns"],"mappings":"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","file":"index.js","sourcesContent":["﻿import React, { Component } from 'react';\r\nimport { Table } from 'antd';\r\nimport _ from 'lodash';\r\nimport './style.scss';\r\nimport Fetch from '../Fetch';\r\n\r\nconst PAGINATION = {\r\n  defaultPageSize: 20, // 默认页码\r\n  defaultCurrent: 1, // 默认页\r\n  current: 1,\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n};\r\n\r\nexport default class TableEx extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: props.history,\r\n      loading: false,\r\n      pagination: Object.assign({}, PAGINATION, props.pagination || {}),\r\n      dataSource: []\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n    style: {},\r\n    data: null, // 包含分页,条目项等所有数据 {list: [], pageSize: 30, current: 1, total: 100}\r\n    api: null, // 接口，当传入该参数时，请勿传入data。 () => {}\r\n    history: [], // 该字段用于刷新表格数据，当向该字段中插入请求参数时，重新请求刷新表格。api参数必填\r\n    params: {}, // 该参数优先级高于histroy中参数\r\n    onChange: (pagination, filters, sorter) => null, // 页码，条目数，排序，过滤器等变更事件，可返回请求参数\r\n\r\n    currentPage: null, // 受控当前页码\r\n    onCurrentPageChange: num => {}, // 当前页码变更\r\n\r\n    onRequest: (params) => params, // 请求参数{current, pageSize}针对业务进行格式化\r\n    onResponse: (res, reqParams) => res, // 响应数据格式化为组件需要的格式{list: [], pageSize: 30, current: 1, total: 100}\r\n\r\n    // 以下参数参照 ant table\r\n    columns: [],\r\n    pagination: PAGINATION,\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // 存在外部history与当前组件内history不一致的问题\r\n    if (nextProps.history && !_.isEqual(this.props.history, nextProps.history)) {\r\n      this.setState({ history: nextProps.history }); // 将直接替换掉内部history\r\n    }\r\n    // 数据未发生变更时，不做刷新\r\n    if (nextProps.data && !_.isEqual(this.props.data, nextProps.data)) {\r\n      this.setData(nextProps.data);\r\n      return;\r\n    }\r\n    // 页码变更处理\r\n    else if (_.isNumber(this.props.currentPage) && !_.isEqual(this.props.currentPage, nextProps.currentPage)) {\r\n      setTimeout(() => {\r\n        this.refresh({ current: nextProps.currentPage })\r\n      })\r\n      return;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.data) {\r\n      this.setData(this.props.data);\r\n    }\r\n  }\r\n\r\n  refresh = (newParams = {}, isMergeLast = true) => {\r\n    let params = newParams;\r\n    if (isMergeLast) {\r\n      params = Object.assign({}, _.last(this.state.history), params);\r\n    }\r\n    this.setState({ history: this.state.history.concat([params]) });\r\n  }\r\n\r\n  onChange = (pagination, filters, sorter) => {\r\n    // 分页状态未变更，则为过滤条件变更\r\n    if (_.isEqual(pagination, this.state.pagination)) {\r\n      let filterParam = this.props.onChange(pagination, filters, sorter);\r\n      if (!filterParam) {\r\n        this.refresh({\r\n          filters,\r\n          sorter: { columnKey: sorter.columnKey, field: sorter.field, order: sorter.order }\r\n        });\r\n      }\r\n    }\r\n    // 分页请求\r\n    else {\r\n      // 受控页码处理, 页码不做变更，由外部控制，内部自动调整pageSize\r\n      if (_.isNumber(this.props.currentPage)) {\r\n        if (this.state.pagination.pageSize !== pagination.pageSize) {\r\n          let newPagination = { ...this.state.pagination };\r\n          newPagination.pageSize = pagination.pageSize;\r\n          this.setState({ pagination: newPagination }, this.refresh);\r\n        } else {\r\n          this.props.onCurrentPageChange && this.props.onCurrentPageChange(pagination.current);\r\n        }\r\n      }\r\n      // 非受控页码自动跳转\r\n      else {\r\n        this.setState({ pagination }, this.refresh);\r\n      }\r\n    }\r\n  }\r\n\r\n  setData = (data) => {\r\n    let dataSource = _.get(data, 'list', []);\r\n    if (!_.isArray(dataSource)) {\r\n      console.error('TableEx: data.list must be an Array');\r\n      return;\r\n    }\r\n    this.setState({\r\n      pagination: Object.assign({}, this.state.pagination, {\r\n        current: _.get(data, 'current', 1),\r\n        pageSize: _.get(data, 'pageSize', this.state.pagination.defaultPageSize),\r\n        total: _.get(data, 'total', 0),\r\n      }),\r\n      dataSource\r\n    });\r\n  }\r\n\r\n  onFetchResponse = (res, requestParams) => {\r\n    res = this.props.onResponse(res, requestParams) || res;\r\n    this.setData(res);\r\n  }\r\n\r\n  onFetchRequest = (params) => {\r\n    params = Object.assign({\r\n      pageSize: _.get(this.state, 'pagination.pageSize', this.state.pagination.defaultPageSize),\r\n      current: this.props.currentPage ? this.props.currentPage : _.get(this.state, 'pagination.current', 1),\r\n    }, params);\r\n    params = this.props.onRequest(params) || params;\r\n    return params;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`nasa-grid ${this.props.className}`} style={this.props.style}>\r\n        <Fetch \r\n          api={this.props.api}\r\n          history={this.state.history}\r\n          params={this.props.params}\r\n          onRequest={this.onFetchRequest}\r\n          onResponse={this.onFetchResponse}\r\n          onLoadingChange={loading => this.setState({ loading })}\r\n        />\r\n        <Table\r\n          {...this.props}\r\n          onChange={this.onChange}\r\n          loading={this.state.loading}\r\n          pagination={this.props.pagination === false ? false : this.state.pagination} \r\n          dataSource={this.state.dataSource} \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}"]}