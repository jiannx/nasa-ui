{"version":3,"sources":["../../components/_Test/TestFormEx.jsx"],"names":["React","Component","Button","message","Input","Switch","Select","Radio","Rate","Slider","Checkbox","FormEx2","ModalEx","FormItem","Item","Option","RadioGroup","Group","formItemLayout","labelCol","span","wrapperCol","ModalForm","props","handleOk","close","form","submit","console","log","status","setState","formValidate","f","ModalFormWithButton","state","values","info","modal","ok","margin","TestFormEx","modalForm","confirm","title","content","onOk","modalFormWithButton","footer","name","isOk","data","min","max","pattern","validator","rule","value","callback","source","options","width","handleChange","offset","setValues","setValue","validateValue","isSuccess","result"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyCC,MAAzC,EAAiDC,KAAjD,EAAwDC,IAAxD,EAA8DC,MAA9D,EAAsEC,QAAtE,QAAsF,MAAtF;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC;;AAEA,IAAMC,WAAWF,QAAQG,IAAzB;AACA,IAAMC,SAAST,OAAOS,MAAtB;AACA,IAAMC,aAAaT,MAAMU,KAAzB;;AAEA,IAAMC,iBAAiB;AACrBC,YAAU,EAAEC,MAAM,CAAR,EADW;AAErBC,cAAY,EAAED,MAAM,CAAR;AAFS,CAAvB;;IAMME,S;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAAA,UAInBC,QAJmB,GAIR,UAACC,KAAD,EAAW;AACpB,YAAKC,IAAL,CAAUC,MAAV,CAAiB,YAAM;AACrBC,gBAAQC,GAAR,CAAY,mBAAZ;AACAJ,iBAASA,OAAT;AACD,OAHD;AAID,KATkB;;AAAA;AAElB;;;;6BASQ;AAAA;;AACP,aACE;AAAC,eAAD;AAAA;AACE,sBAAY,oBAACK,MAAD,EAAW;AACrB,mBAAKC,QAAL,CAAc,EAACC,cAAcF,MAAf,EAAd;AACD,WAHH;AAIE,eAAK,aAACG,CAAD,EAAO;AAAE,mBAAKP,IAAL,GAAYO,CAAZ;AAAc;AAJ9B;AAME,4BAAC,QAAD;AACE,iBAAM,cADR;AAEE,oBAAU,EAAEb,MAAM,CAAR,EAFZ;AAGE,sBAAY,EAAEA,MAAM,CAAR,EAHd;AAIE,qBAAU,MAJZ;AAKE,wBALF;AAME,qBACE,oBAAC,KAAD,IAAO,SAAS,mBAAK;AAAEQ,sBAAQC,GAAR,CAAY,aAAZ;AAA2B,aAAlD;AAPJ;AANF,OADF;AAmBD;;;;EAhCqB5B,S;;IAoClBiC,mB;;;AACJ,+BAAYX,KAAZ,EAAmB;AAAA;;AAAA,2IACXA,KADW;;AAEjB,WAAKY,KAAL,GAAa;AACXH,oBAAc;AADH,KAAb;AAFiB;AAKlB;;;;6BACQ;AAAA;;AACP,aACE;AAAC,eAAD;AAAA;AACE,sBAAY,oBAACF,MAAD,EAAW;AACrB,mBAAKC,QAAL,CAAc,EAACC,cAAcF,MAAf,EAAd;AACD,WAHH;AAIE,oBAAU,kBAACM,MAAD,EAAU;AAClBR,oBAAQC,GAAR,CAAY,OAAKH,IAAjB;AACAE,oBAAQS,IAAR,CAAa,0BAAb,EAAyCD,MAAzC;AACA,mBAAKb,KAAL,CAAWe,KAAX,CAAiBC,EAAjB;AACD,WARH;AASE,eAAK,aAACN,CAAD,EAAO;AAAE,mBAAKP,IAAL,GAAYO,CAAZ;AAAc;AAT9B;AAWE,4BAAC,QAAD;AACE,iBAAM,cADR;AAEE,oBAAU,EAAEb,MAAM,CAAR,EAFZ;AAGE,sBAAY,EAAEA,MAAM,CAAR,EAHd;AAIE,qBAAU,MAJZ;AAKE,wBALF;AAME,qBACE,oBAAC,KAAD,IAAO,SAAS,mBAAK;AAAEQ,sBAAQC,GAAR,CAAY,aAAZ;AAA2B,aAAlD;AAPJ,UAXF;AAqBE,4BAAC,KAAD,IAAO,SAAS,mBAAK;AAAED,oBAAQC,GAAR,CAAY,aAAZ;AAA2B,WAAlD,GArBF;AAsBE;AAAA;AAAA,YAAK,WAAU,kBAAf,EAAkC,OAAO,EAACW,QAAQ,qBAAT,EAAzC;AACE;AAAC,kBAAD;AAAA,cAAQ,MAAK,OAAb,EAAqB,SAAS,KAAKjB,KAAL,CAAWe,KAAX,CAAiBb,KAA/C;AAAA;AAAA,WADF;AAEE;AAAC,kBAAD;AAAA,cAAQ,MAAK,OAAb,EAAqB,MAAK,SAA1B,EAAoC,UAAS,QAA7C,EAAsD,UAAU,CAAC,KAAKU,KAAL,CAAWH,YAA5E;AAAA;AAAA;AAFF;AAtBF,OADF;AA6BD;;;;EArC+B/B,S;;IA0C5BwC,U;;;AACJ,sBAAYlB,KAAZ,EAAmB;AAAA;;AAAA,yHACXA,KADW;;AAAA,WAKnBmB,SALmB,GAKP,YAAM;AAChB9B,cAAQ+B,OAAR,CAAgB;AACdC,eAAO,MADO;AAEdC,iBAAS,oBAAC,SAAD,OAFK;AAGdC,cAAM,cAACrB,KAAD,EAAW;AACfA,mBAASA,OAAT;AACAG,kBAAQC,GAAR,CAAY,YAAZ;AACD;AANa,OAAhB;AAQD,KAdkB;;AAAA,WAgBnBkB,mBAhBmB,GAgBG,YAAM;AAC1BnC,cAAQ+B,OAAR,CAAgB;AACdC,eAAO,MADO;AAEdC,iBAAS,oBAAC,mBAAD,OAFK;AAGdG,gBAAQ,IAHM;AAIdF,cAAM,cAACrB,KAAD,EAAW;AACfA,mBAASA,OAAT;AACAG,kBAAQC,GAAR,CAAY,YAAZ;AACD;AAPa,OAAhB;AASD,KA1BkB;;AAEjB,WAAKM,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BAyBQ;AAAA;;AAEP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE,uCAFF;AAGE;AAAA;AAAA;AAAA;AAAA,SAHF;AAIE;AAAC,gBAAD;AAAA,YAAQ,SAAS,KAAKO,SAAtB;AAAA;AAAA,SAJF;AAKE,uCALF;AAME;AAAA;AAAA;AAAA;AAAA,SANF;AAOE;AAAC,gBAAD;AAAA,YAAQ,SAAS,KAAKK,mBAAtB;AAAA;AAAA,SAPF;AAQE,uCARF;AASE;AAAA;AAAA;AAAA;AAAA,SATF;AAUE;AAAC,iBAAD;AAAA;AACE,2BAAe,EAACE,MAAM,EAAP,EAAWC,MAAM,IAAjB,EADjB;AAEE,wBAAY,oBAACpB,MAAD,EAAW;AACrBF,sBAAQC,GAAR,2CAAsBC,MAAtB;AACA,qBAAKC,QAAL,CAAc,EAACC,cAAcF,MAAf,EAAd;AACD,aALH;AAME,sBAAU,wBAAQ;AAAEF,sBAAQS,IAAR,CAAa,eAAb,EAA8Bc,IAA9B;AAAoC,aAN1D;AAOE,iBAAM;AAAA,qBAAK,OAAKzB,IAAL,GAAYO,CAAjB;AAAA;AAPR;AAUE,8BAAC,QAAD;AACE,mBAAM,cADR;AAEE,uBAAU;AAFZ,aAGMf,cAHN;AAIE,0BAJF;AAKE,uBACE,oBAAC,KAAD,IAAO,SAAS,mBAAK;AAAEU,wBAAQC,GAAR,CAAY,aAAZ;AAA2B,eAAlD;AANJ,aAVF;AAmBE,8BAAC,QAAD;AACE,mBAAM,0BADR;AAEE,uBAAU;AAFZ,aAGMX,cAHN;AAIE,0BAJF;AAKE,qBAAQ,QALV;AAME,mBAAO,CACL,EAAEkC,KAAK,CAAP,EAAUC,KAAK,EAAf,EAAmBlD,SAAS,YAA5B,EADK,EAEL,EAAEmD,SAAS,kCAAX,EAA+CnD,SAAS,oBAAxD,EAFK,EAGL;AAACoD,uBAAD,qBAAWC,IAAX,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmD;AACjD,oBAAGH,UAAU,QAAb,EAAsB;AACpBC,2BAAS,KAAT;AACD,iBAFD,MAEK;AACHA;AACD;AACF,eAND;AAMGvD,uBAAS,OANZ,EAHK,CANT;AAiBE,uBACE,oBAAC,KAAD,IAAO,SAAS,mBAAK;AAAEyB,wBAAQC,GAAR,CAAY,aAAZ;AAA2B,eAAlD,EAAoD,QAAQ,kBAAK;AAAED,wBAAQC,GAAR,CAAY,YAAZ;AAA0B,eAA7F,EAA+F,aAAY,kDAA3G;AAlBJ,aAnBF;AAwCE,8BAAC,QAAD;AACE,mBAAM,cADR;AAEE,uBAAU;AAFZ,aAGMX,cAHN;AAIE,uBAAW,oBAAC,MAAD;AAJb,aAxCF;AA8CE,8BAAC,QAAD;AACE,mBAAM,kCADR;AAEE,uBAAU,aAFZ;AAGE,0BAAc;AAHhB,aAIMA,cAJN;AAKE,uBAAW,oBAAC,MAAD;AALb,aA9CF;AAqDE,8BAAC,QAAD;AACE,mBAAM,eADR;AAEE,uBAAU,qBAFZ;AAGE;AAHF,aAIMA,cAJN;AAKE,uBACE;AAAC,mBAAD,CAAO,KAAP;AAAA;AACE;AAAC,qBAAD,CAAO,MAAP;AAAA,kBAAc,OAAM,YAApB;AAAA;AAAA,eADF;AAEE;AAAC,qBAAD,CAAO,MAAP;AAAA,kBAAc,OAAM,UAApB;AAAA;AAAA,eAFF;AAGE;AAAC,qBAAD,CAAO,MAAP;AAAA,kBAAc,OAAM,QAApB;AAAA;AAAA;AAHF;AANJ,aArDF;AAkEE,8BAAC,QAAD;AACE,mBAAM,eADR;AAEE,uBAAU,qBAFZ;AAGE,0BAAc;AAHhB,aAIMA,cAJN;AAKE,uBACE;AAAC,wBAAD;AAAA;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAO,CAAd;AAAA;AAAA,eADF;AAEE;AAAC,qBAAD;AAAA,kBAAO,OAAO,CAAd;AAAA;AAAA,eAFF;AAGE;AAAC,qBAAD;AAAA,kBAAO,OAAO,CAAd;AAAA;AAAA,eAHF;AAIE;AAAC,qBAAD;AAAA,kBAAO,OAAO,CAAd;AAAA;AAAA;AAJF;AANJ,aAlEF;AAgFE,8BAAC,QAAD;AACE,mBAAM,eADR;AAEE,uBAAU,eAFZ;AAGE,0BAAa;AAHf,aAIMA,cAJN;AAKE,uBACE;AAAC,oBAAD;AAAA,gBAAQ,OAAO,EAAE2C,OAAO,GAAT,EAAf;AACE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,MAAd;AAAA;AAAA,eADF;AAEE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,MAAd;AAAA;AAAA,eAFF;AAGE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,UAAd,EAAyB,cAAzB;AAAA;AAAA,eAHF;AAIE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,UAAd;AAAA;AAAA;AAJF;AANJ,aAhFF;AA8FE,8BAAC,QAAD;AACE,mBAAM,iBADR;AAEE,uBAAU,iBAFZ;AAGE,0BAAc,CAAC,MAAD;AAHhB,aAIM3C,cAJN;AAKE,uBACE;AAAC,oBAAD;AAAA;AACE,sBAAK,UADP;AAEE,6BAAY;AAFd;AAIE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,MAAd;AAAA;AAAA,eAJF;AAKE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,MAAd;AAAA;AAAA,eALF;AAME;AAAC,sBAAD;AAAA,kBAAQ,OAAM,UAAd,EAAyB,cAAzB;AAAA;AAAA,eANF;AAOE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,UAAd;AAAA;AAAA;AAPF;AANJ,aA9FF;AA+GE,8BAAC,QAAD;AACE,mBAAM,UADR;AAEE,uBAAU,UAFZ;AAGE,0BAAc;AAHhB,aAIMA,cAJN;AAKE,uBACE;AAAC,sBAAD;AAAA;AAAA;AAAA;AANJ,aA/GF;AAwHE,8BAAC,QAAD;AACE,mBAAM,MADR;AAEE,uBAAU,MAFZ;AAGE,0BAAc,CAHhB;AAIE;AAJF,aAKMA,cALN;AAME,uBACE,oBAAC,IAAD,IAAM,UAAU,KAAK4C,YAArB;AAPJ,aAxHF;AAkIE,8BAAC,QAAD;AACE,mBAAM,QADR;AAEE,uBAAU;AAFZ,aAGM5C,cAHN;AAIE,uBACE,oBAAC,MAAD;AALJ,aAlIF;AA0IE;AAAC,oBAAD;AAAA,8BACMA,cADN;AAEE,0BAAY,EAAE6C,QAAQ,CAAV;AAFd;AAIE;AAAC,oBAAD;AAAA,gBAAQ,MAAK,SAAb,EAAuB,UAAS,QAAhC,EAAyC,UAAU,CAAC,KAAK5B,KAAL,CAAWH,YAA/D;AAAA;AAAA;AAJF,WA1IF;AAiJE;AAAC,kBAAD;AAAA;AACE,uBAAS,mBAAM;AACb,uBAAKN,IAAL,CAAUC,MAAV,CAAiB,gBAAO;AACtBC,0BAAQS,IAAR,CAAa,MAAb,EAAqBc,IAArB;AACD,iBAFD;AAGD;AALH;AAAA;AAAA,WAjJF;AAwJE,yCAxJF;AA0JE;AAAC,kBAAD;AAAA;AACE,uBAAS,mBAAM;AACb,uBAAKzB,IAAL,CAAUsC,SAAV,CAAoB,EAAEf,MAAM,OAAR,EAApB,EAAsC,IAAtC;AACD;AAHH;AAAA;AAAA,WA1JF;AA+JE,yCA/JF;AAiKE;AAAC,kBAAD;AAAA;AACE,uBAAS,mBAAM;AACb,uBAAKvB,IAAL,CAAUuC,QAAV,CAAmB,MAAnB,EAA2B,UAA3B;AACD;AAHH;AAAA;AAAA,WAjKF;AAsKE,yCAtKF;AAwKE;AAAC,kBAAD;AAAA;AACE,uBAAS,mBAAM;AACb,uBAAKvC,IAAL,CAAUwC,aAAV,CAAwB,MAAxB,EAAgC,UAACC,SAAD,EAAYC,MAAZ,EAAqB;AACnDxC,0BAAQS,IAAR,CAAa,MAAb,EAAqB+B,MAArB;AACD,iBAFD;AAGD;AALH;AAAA;AAAA,WAxKF;AA+KE;AA/KF;AAVF,OADF;AA+LD;;;;EA9NsBnE,S;;AAkOzB,eAAewC,UAAf","file":"TestFormEx.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, message, Input, Switch, Select, Radio, Rate, Slider, Checkbox } from 'antd';\r\nimport { FormEx2, ModalEx } from '../index.js';\r\n\r\nconst FormItem = FormEx2.Item;\r\nconst Option = Select.Option;\r\nconst RadioGroup = Radio.Group;\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 2 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\n\r\nclass ModalForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleOk = (close) => {\r\n    this.form.submit(() => {\r\n      console.log('ModalForm success');\r\n      close && close();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormEx2\r\n        onValidate={(status)=> { \r\n          this.setState({formValidate: status});\r\n        }}\r\n        ref={(f) => { this.form = f}}\r\n      >\r\n        <FormItem\r\n          label=\"名称\"\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 8 }}\r\n          dataIndex=\"name\"\r\n          required\r\n          decorator={\r\n            <Input onFocus={()=> { console.log('input focus')}}></Input>\r\n          }\r\n        />\r\n      </FormEx2>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass ModalFormWithButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formValidate: false,\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <FormEx2\r\n        onValidate={(status)=> { \r\n          this.setState({formValidate: status});\r\n        }}\r\n        onSubmit={(values)=>{\r\n          console.log(this.form);\r\n          console.info('ModalFormWithButton 提交数据', values);\r\n          this.props.modal.ok();\r\n        }}\r\n        ref={(f) => { this.form = f}}\r\n      >\r\n        <FormItem\r\n          label=\"名称\"\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 8 }}\r\n          dataIndex=\"name\"\r\n          required\r\n          decorator={\r\n            <Input onFocus={()=> { console.log('input focus')}}></Input>\r\n          }\r\n        />\r\n        <Input onFocus={()=> { console.log('input focus')}}></Input>\r\n        <div className=\"ant-modal-footer\" style={{margin: '0 -16px -16px -16px'}}>\r\n          <Button size=\"large\" onClick={this.props.modal.close}>取消</Button>\r\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" disabled={!this.state.formValidate}>提交</Button>\r\n        </div>\r\n      </FormEx2>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nclass TestFormEx extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  modalForm = () => {\r\n    ModalEx.confirm({\r\n      title: '弹窗表单',\r\n      content: <ModalForm></ModalForm>,\r\n      onOk: (close) => {\r\n        close && close();\r\n        console.log('ModalEx ok');\r\n      }\r\n    });\r\n  }\r\n\r\n  modalFormWithButton = () => {\r\n    ModalEx.confirm({\r\n      title: '弹窗表单',\r\n      content: <ModalFormWithButton></ModalFormWithButton>,\r\n      footer: null,\r\n      onOk: (close) => {\r\n        close && close();\r\n        console.log('ModalEx ok');\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>表单</h1>\r\n        <br/>\r\n        <h2>表单一 弹窗表单</h2>\r\n        <Button onClick={this.modalForm}>弹窗表单</Button>\r\n        <br/>\r\n        <h2>表单二 弹窗表单 关联按钮</h2>\r\n        <Button onClick={this.modalFormWithButton}>弹窗表单 关联按钮</Button>\r\n        <br/>\r\n        <h2>表单三 基本表单</h2>\r\n        <FormEx2\r\n          defaultValues={{name: '', isOk: true}}\r\n          onValidate={(status)=> { \r\n            console.log(`表单校验状态 ${status}`);\r\n            this.setState({formValidate: status});\r\n          }}\r\n          onSubmit={data => { console.info('button submit', data)}}\r\n          ref={ f => this.form = f}\r\n        >\r\n\r\n          <FormItem\r\n            label=\"名称\"\r\n            dataIndex=\"name\"\r\n            {...formItemLayout}\r\n            required\r\n            decorator={\r\n              <Input onFocus={()=> { console.log('input focus')}}></Input>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"失焦校验\"\r\n            dataIndex=\"nameBlur\"\r\n            {...formItemLayout}\r\n            required\r\n            trigger=\"onBlur\"\r\n            rules={[\r\n              { min: 6, max: 16, message: '请输入6-16位密码'},\r\n              { pattern: /^[a-zA-Z0-9#@!~%^&*_\\\\.-]{6,16}$/, message: '请输入英文、数字、特殊字符的任意组合'},\r\n              {validator(rule, value, callback, source, options) {\r\n                if(value === 'aaaaaa'){\r\n                  callback(false);\r\n                }else{\r\n                  callback();\r\n                }\r\n              }, message: '名称已存在'}\r\n            ]}\r\n            decorator={\r\n              <Input onFocus={()=> { console.log('input focus')}} onBlur={()=> { console.log('input blur')}} placeholder=\"输入aaaaaa显示已存在\"></Input>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"开启\"\r\n            dataIndex=\"isOk\"\r\n            {...formItemLayout}\r\n            decorator={<Switch></Switch>}\r\n          />\r\n          <FormItem\r\n            label=\"开启(默认值)\"\r\n            dataIndex=\"isOkDefault\"\r\n            defaultValue={true}\r\n            {...formItemLayout}\r\n            decorator={<Switch></Switch>}\r\n          />\r\n          <FormItem\r\n            label=\"radio group 1\"\r\n            dataIndex=\"radiogroup.child.aa\"\r\n            required\r\n            {...formItemLayout}\r\n            decorator={\r\n              <Radio.Group >\r\n                <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>\r\n                <Radio.Button value=\"vertical\">Vertical</Radio.Button>\r\n                <Radio.Button value=\"inline\">Inline</Radio.Button>\r\n              </Radio.Group>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"radio group 2\"\r\n            dataIndex=\"radiogroup.child.bb\"\r\n            defaultValue={1}\r\n            {...formItemLayout}\r\n            decorator={\r\n              <RadioGroup>\r\n                <Radio value={1}>A</Radio>\r\n                <Radio value={2}>B</Radio>\r\n                <Radio value={3}>C</Radio>\r\n                <Radio value={4}>D</Radio>\r\n              </RadioGroup>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"select normal\"\r\n            dataIndex=\"select.normal\"\r\n            defaultValue=\"jack\"\r\n            {...formItemLayout}\r\n            decorator={\r\n              <Select style={{ width: 200 }}>\r\n                <Option value=\"jack\">Jack</Option>\r\n                <Option value=\"lucy\">Lucy</Option>\r\n                <Option value=\"disabled\" disabled>Disabled</Option>\r\n                <Option value=\"Yiminghe\">yiminghe</Option>\r\n              </Select>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"select multiple\"\r\n            dataIndex=\"select.multiple\"\r\n            defaultValue={['lucy']}\r\n            {...formItemLayout}\r\n            decorator={\r\n              <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"Please select\"\r\n              >\r\n                <Option value=\"jack\">Jack</Option>\r\n                <Option value=\"lucy\">Lucy</Option>\r\n                <Option value=\"disabled\" disabled>Disabled</Option>\r\n                <Option value=\"Yiminghe\">yiminghe</Option>\r\n              </Select>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"checkbox\"\r\n            dataIndex=\"checkbox\"\r\n            defaultValue={true}\r\n            {...formItemLayout}\r\n            decorator={\r\n              <Checkbox>是否选中</Checkbox>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"Rate\"\r\n            dataIndex=\"rate\"\r\n            defaultValue={1}\r\n            required\r\n            {...formItemLayout}\r\n            decorator={\r\n              <Rate onChange={this.handleChange}/>\r\n            }\r\n          />\r\n          <FormItem\r\n            label=\"Slider\"\r\n            dataIndex=\"slider\"\r\n            {...formItemLayout}\r\n            decorator={\r\n              <Slider/>\r\n            }\r\n          />\r\n          <FormItem\r\n            {...formItemLayout}\r\n            wrapperCol={{ offset: 2 }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled={!this.state.formValidate}>表单内提交，将会调用Form上的onSubmit事件</Button>\r\n          </FormItem>\r\n\r\n          <Button \r\n            onClick={() => {\r\n              this.form.submit(data =>{\r\n                console.info('手动提交', data)\r\n              });\r\n            }}\r\n          >手动提交，并传入回调函数</Button>\r\n          <br/>\r\n\r\n          <Button \r\n            onClick={() => {\r\n              this.form.setValues({ name: '重设的名称'}, true);\r\n            }}\r\n          >重设表单的所有值</Button>\r\n          <br/>\r\n\r\n          <Button \r\n            onClick={() => {\r\n              this.form.setValue('name', '只设置nanme');\r\n            }}\r\n          >重设表单的 name 值</Button>\r\n          <br/>\r\n\r\n          <Button \r\n            onClick={() => {\r\n              this.form.validateValue('name', (isSuccess, result)=>{\r\n                console.info('校验结果', result);\r\n              });\r\n            }}\r\n          >只校验 name 值</Button>\r\n          <br/>\r\n        </FormEx2>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default TestFormEx;"]}