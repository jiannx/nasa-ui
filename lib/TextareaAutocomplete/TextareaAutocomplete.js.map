{"version":3,"sources":["../../components/TextareaAutocomplete/TextareaAutocomplete.jsx"],"names":["React","Component","Input","AutoComplete","Select","_","TextArea","Option","TextareaAutocomplete","props","handleSearch","value","setState","dataSource","concat","handleChange","list","onChange","state","nextProps","isEqual","className","size","style","placeholder","map","x","i","defaultProps"],"mappings":";;;;;;;;AAAA;;;;;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,MAA9B,QAA4C,MAA5C;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,OAAO,6BAAP;;IAEQC,Q,GAAaJ,K,CAAbI,Q;;AACR,IAAMC,SAASH,OAAOG,MAAtB;;IAEqBC,oB;;;AACnB,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACXA,KADW;;AAAA,UA0BnBC,YA1BmB,GA0BJ,UAACC,KAAD,EAAW;AACxB,UAAIA,UAAU,EAAd,EAAkB;AAChB,cAAKC,QAAL,CAAc;AACZC,sBAAY,MAAKJ,KAAL,CAAWI;AADX,SAAd;AAGD,OAJD,MAIO;AACL,cAAKD,QAAL,CAAc;AACZC,sBAAY,CAACF,KAAD,EAAQG,MAAR,CAAe,MAAKL,KAAL,CAAWI,UAA1B;AADA,SAAd;AAGD;AACF,KApCkB;;AAAA,UAsCnBE,YAtCmB,GAsCJ,UAACC,IAAD,EAAU;AACvB;AACA,YAAKP,KAAL,CAAWQ,QAAX,CAAoBD,IAApB;AACD,KAzCkB;;AAEjB,UAAKE,KAAL,GAAa;AACXL,kBAAYJ,MAAMI;AADP,KAAb;AAFiB;AAKlB;;;;8CAWyBM,S,EAAW;AACnC;AACA,UAAId,EAAEe,OAAF,CAAU,KAAKF,KAAL,CAAWL,UAArB,EAAiCM,UAAUN,UAA3C,CAAJ,EAA4D;AAC1D;AACD;AACD,WAAKD,QAAL,CAAc;AACZC,oBAAY,KAAKJ,KAAL,CAAWI;AADX,OAAd;AAGD;;;6BAmBQ;AACP,UAAIQ,oCAAkC,KAAKZ,KAAL,CAAWY,SAA7C,SAA0D,KAAKZ,KAAL,CAAWa,IAAzE;;AAEA,aACE;AAAA;AAAA,UAAK,WAAWD,SAAhB,EAA2B,OAAO,KAAKZ,KAAL,CAAWc,KAA7C;AACE;AAAC,gBAAD;AAAA;AACE,kBAAK;AACL;AACA;AAHF,cAIE,aAAa,KAAKd,KAAL,CAAWe,WAJ1B;AAKE,sBAAU,KAAKT,YALjB;AAME,sBAAU,KAAKL;AANjB;AAQG,eAAKQ,KAAL,CAAWL,UAAX,CAAsBY,GAAtB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBACzB;AAAC,oBAAD;AAAA,gBAAQ,KAAKD,IAAIC,CAAjB;AAAqBD;AAArB,aADyB;AAAA,WAA1B;AARH;AADF,OADF;AAgBD;;;;EA/D+CzB,S;;AAA7BO,oB,CAQZoB,Y,GAAe;AACpBL,SAAO,IADa;AAEpBF,aAAW,EAFS;AAGpBC,QAAM,SAHc,EAGH;AACjBE,eAAa,EAJO;AAKpBX,cAAY,EALQ;AAMpBI,YAAU,oBAAM,CAAE;AANE,C;eARHT,oB","file":"TextareaAutocomplete.js","sourcesContent":["/*\r\n自定义输入 + 可选项 默认最小高度100px\r\n支持选择输入及自定义输入\r\n返回数组\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Input, AutoComplete, Select } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nimport './TextareaAutocomplete.scss';\r\n\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class TextareaAutocomplete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSource: props.dataSource\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    style: null,\r\n    className: '',\r\n    size: 'default', // default small large\r\n    placeholder: '',\r\n    dataSource: [],\r\n    onChange: () => {}\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // 数据未发生变更时，不做刷新\r\n    if (_.isEqual(this.state.dataSource, nextProps.dataSource)) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      dataSource: this.props.dataSource\r\n    });\r\n  }\r\n\r\n  handleSearch = (value) => {\r\n    if (value === '') {\r\n      this.setState({\r\n        dataSource: this.props.dataSource\r\n      });\r\n    } else {\r\n      this.setState({\r\n        dataSource: [value].concat(this.props.dataSource)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (list) => {\r\n    // console.log(list);\r\n    this.props.onChange(list)\r\n  }\r\n\r\n  render() {\r\n    let className = `nasa-textarea-auto ${this.props.className} ${this.props.size}`;\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        <Select\r\n          mode=\"multiple\"\r\n          // style={{minHeight: '80px'}}\r\n          // size={this.props.size}\r\n          placeholder={this.props.placeholder}\r\n          onChange={this.handleChange}\r\n          onSearch={this.handleSearch}\r\n        >\r\n          {this.state.dataSource.map((x, i) => \r\n            <Option key={x + i}>{x}</Option>\r\n          )}\r\n        </Select>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}