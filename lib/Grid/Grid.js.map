{"version":3,"sources":["../../components/Grid/Grid.js"],"names":["React","Component","Table","_","gridConfig","PAGE_SIZE","defaultPageSize","KEYS","Grid","props","onChange","pagination","filters","sorter","console","info","params","getPage","current","pageSize","paramsOfFilter","paramsOfSort","paramsOfChange","Object","keys","length","onFilter","onSort","assign","api","getData","setPage","num","state","set","setState","loading","dataSource","nextProps","isEqual","data","history","setTimeout","componentDidMount","isEmpty","draw","size","total","list","lastHistory","get","then","onResHandler","res","forEach","x","index","_key","catch","className","style","defaultProps","columns","rowKey","scroll","defaultCurrent","showSizeChanger","showQuickJumper","rowSelection"],"mappings":"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","file":"Grid.js","sourcesContent":["﻿/*\r\n调用方式1\r\n<Grid api={this.getList} params={this.gridParams} history={this.history} columns={} />\r\n手动刷新表格: this.history.push(new Date());\r\n\r\n调用方式2 redux:\r\n<Grid data={} onChange={} columns={} />\r\n当页码，排序项，筛选器变更时将出发onChange函数 参数={page, pageSize}\r\n\r\n最终请求参数\r\nObject.assign({page, page_size, sort}, props.history[length-1], props.params)\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Table } from 'antd';\r\nimport _ from 'lodash';\r\nimport { gridConfig } from '../config.js';\r\nimport './Grid.scss';\r\n\r\nconst PAGE_SIZE = gridConfig.defaultPageSize;\r\nconst KEYS = gridConfig;\r\n\r\nexport default class Grid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      pagination: props.pagination,\r\n      dataSource: []\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n    style: {},\r\n    api: null, // 接口，当传入该参数时，请勿传入data。 () => {}\r\n    history: [], // 该字段用于刷新表格数据，当向该字段中插入请求参数时，重新请求刷新表格。api参数必填\r\n    params: {}, // 该参数优先级高于histroy中参数\r\n    data: null, // 包含分页,条目项等所有数据 { data: [], page_now, page_rows, records }\r\n    onChange: (pagination, filters, sorter) => {}, // 页码，条目数，排序，过滤器等变更事件，可返回请求参数\r\n    onSort: (sorter) => {}, // 排序变更事件，可返回请求参数，该参数将合并页码等参数\r\n    onFilter: (filters) => {}, // 过滤器变更事件，可返回参数，该参数将合并页码等参数\r\n\r\n    // 以下参数参照 ant table\r\n    columns: [],\r\n    rowKey: '_key',\r\n    dataSource: [], // 只有列表数据,在data中传入\r\n    size: 'middle',\r\n    loading: false,\r\n    scroll: {},\r\n    pagination: {\r\n      defaultPageSize: PAGE_SIZE,\r\n      defaultCurrent: 1,\r\n      current: 1,\r\n      onChange: () => {},\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n    },\r\n    rowSelection: null\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // 数据未发生变更时，不做刷新\r\n    if (_.isEqual(this.props.data, nextProps.data) &&\r\n      _.isEqual(this.props.history, nextProps.history)) {\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      this.componentDidMount(nextProps);\r\n    });\r\n  }\r\n\r\n  componentDidMount(nextProps) {\r\n    if (this.props.api) {\r\n      this.getData();\r\n      return;\r\n    }\r\n    if (_.isEmpty(this.props.data)) {\r\n      return;\r\n    }\r\n    this.draw(this.props.data);\r\n  }\r\n\r\n  draw(data) {\r\n    this.setState(state => {\r\n      let pagination = false;\r\n      if (this.props.pagination) {\r\n        pagination = Object.assign({}, state.pagination, {\r\n          size: this.props.size,\r\n          current: data[KEYS.current],\r\n          pageSize: data[KEYS.pageSize],\r\n          total: data[KEYS.total],\r\n        });\r\n      }\r\n      return {\r\n        dataSource: data[KEYS.list],\r\n        pagination\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (pagination, filters, sorter) => {\r\n    console.info('Grid onChange: ', { pagination, filters, sorter });\r\n    let params = {\r\n      [KEYS.getPage]: pagination.current,\r\n      [KEYS.pageSize]: pagination.pageSize\r\n    };\r\n    let paramsOfFilter, paramsOfSort, paramsOfChange;\r\n    if (Object.keys(filters).length > 0 && this.props.onFilter) {\r\n      paramsOfFilter = this.props.onFilter(filters) || {};\r\n    }\r\n    if (Object.keys(sorter).length > 0 && this.props.onSort) {\r\n      paramsOfSort = this.props.onSort(sorter) || {};\r\n    }\r\n    if (this.props.onChange) {\r\n      paramsOfChange = this.props.onChange(pagination, filters, sorter) || {};\r\n    }\r\n    params = Object.assign(params, paramsOfChange, paramsOfFilter, paramsOfSort);\r\n    if (this.props.api) {\r\n      this.getData(params);\r\n    }\r\n  }\r\n\r\n  setPage = (num) => {\r\n    let state = _.set(this.state, 'pagination.current', 1);\r\n    this.setState(state);\r\n  }\r\n\r\n  getData(params) {\r\n    if (this.props.history.length === 0) {\r\n      return;\r\n    }\r\n    let lastHistory = this.props.history[this.props.history.length - 1];\r\n    params = params || {\r\n      [KEYS.getPage]: _.get(this.state, 'pagination.current', 1),\r\n      [KEYS.pageSize]: _.get(this.state, 'pagination.pageSize', PAGE_SIZE)\r\n    };\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    this.props.api(Object.assign({}, lastHistory, params, this.props.params)).then(res => {\r\n      if (this.props.onResHandler) {\r\n        res = this.props.onResHandler(res) || res;\r\n      }\r\n      res.data[KEYS.list].forEach((x, index) => {\r\n        x._key = (res.data[KEYS.current] - 1) * res.data[KEYS.pageSize] + index;\r\n      });\r\n      this.setState({\r\n        loading: false,\r\n        data: res.data\r\n      });\r\n      this.draw(res.data);\r\n    }).catch(err => {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`nasa-grid ${this.props.className}`} style={this.props.style}>\r\n        <Table\r\n          {...this.props}\r\n          onChange={this.onChange}\r\n          loading={this.state.loading}\r\n          pagination={this.state.pagination} \r\n          dataSource={this.state.dataSource} \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}"]}