{"version":3,"sources":["../../components/FormEx2/controls.jsx"],"names":["React","Component","_","Button","Row","Col","Modal","Input","Radio","Select","Checkbox","Icon","FormEx2","FormItem","Item","RadioGroup","Group","Option","CheckboxGroup","defaultItem","type","label","bind","children","disabled","required","rules","undefined","defaultValue","keyLabel","valueLabel","options","span","addText","tokenSeparators","layout","labelCol","xs","sm","wrapperCol","fromItemWithData","getFormItemProps","opt","props","dataIndex","withDecorator","decorator","render","item","Object","assign","itemProps","formItem","placeholder","withDataIndex"],"mappings":"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","file":"controls.js","sourcesContent":["import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Button, Row, Col, Modal, Input, Radio, Select, Checkbox, Icon } from 'antd';\r\nimport FormEx2 from './FormEx2.jsx';\r\n\r\nconst FormItem = FormEx2.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst Option = Select.Option;\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst defaultItem = {\r\n  type: 'input', //string, input||radio||checkbox||select||oneOf 多项只能配置一项||array列表项||br换行||selectTag多重输入\r\n  label: '', // 标题文本\r\n  bind: null, // 显示及编辑时对应数据中的索引\r\n  children: null, // array, array 中子节点\r\n  disabled: false, // 当前项是否可编辑\r\n  required: false, // 编辑时是否必填\r\n  rules: undefined, // 编辑时校验规则\r\n  defaultValue: undefined, // 默认值\r\n\r\n  // Object 两个文本框实现键值对形式 根据输入的值，生成对象 {key: value}\r\n  keyLabel: 'key', // key值文本框文本 \r\n  valueLabel: 'value', // value 文本框显示文本\r\n\r\n  // radio select\r\n  options: null, // radio label, value [{label: '描述', value: 'type1'}]\r\n\r\n  // array可选参数 参照 FormExItemArray的参数\r\n  span: undefined, // 编辑时布局 用于children元素 children: [{bind: 'id', label: 'ID', span: 4}]\r\n  addText: '新增', // 编辑时新增文本\r\n\r\n  // selectTag\r\n  tokenSeparators: [','], // 分隔符\r\n}\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    xs: { span: 12 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 12 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\n// 包含 dataIndex\r\nfunction fromItemWithData() {\r\n\r\n}\r\n\r\nfunction getFormItemProps(opt) {\r\n  let props = {\r\n    ...layout,\r\n    label: opt.label,\r\n    required: opt.required,\r\n    rules: opt.rules,\r\n    defaultValue: opt.defaultValue,\r\n    dataIndex: opt.dataIndex,\r\n  };\r\n  return props;\r\n}\r\n\r\nfunction withDecorator(props) {\r\n  return (\r\n    <FormItem\r\n      {...layout} \r\n      label={props.label} \r\n      required={props.required} \r\n      rules={props.rules}\r\n      defaultValue={ props.dataIndex ? props.defaultValue : undefined} \r\n      dataIndex={ props.dataIndex ? props.bind : undefined} \r\n      decorator={ props.dataIndex ? props.decorator : undefined}\r\n    >\r\n      {props.dataIndex ? null: props.decorator}\r\n    </FormItem>\r\n  )\r\n}\r\n\r\n\r\nfunction render(item) {\r\n  let props = Object.assign({}, defaultItem, item); // 参数生成\r\n  props.dataIndex = props.bind;\r\n  let itemProps = getFormItemProps(props);\r\n\r\n  let formItem;\r\n  if (props.decorator) {}\r\n  // input \r\n  else if (props.type === 'input') {\r\n    formItem = (\r\n      <FormItem\r\n        {...itemProps}\r\n        decorator={<Input placeholder={props.placeholder}></Input>}\r\n      />\r\n    )\r\n  }\r\n  // radio\r\n  else if (props.type === 'radio') {\r\n\r\n  }\r\n  // select \r\n  else if (props.type === 'select') {\r\n\r\n  }\r\n  // 多选\r\n  else if (props.type === 'selectMult') {\r\n\r\n  }\r\n  // 多重输入 \r\n  else if (props.type === 'selectTag') {\r\n\r\n  }\r\n  // checkbox\r\n  else if (props.type === 'checkbox') {\r\n\r\n  }\r\n  // checknbox grop\r\n  else if (props.type === 'checkboxGroup') {\r\n\r\n  }\r\n  // one of \r\n  else if (props.type === 'oneOf') {\r\n\r\n  }\r\n  // array \r\n  else if (props.type === 'array') {\r\n\r\n  }\r\n  // object \r\n  else if (props.type === 'object') {\r\n\r\n  }\r\n  <FormItem\r\n        {...layout} \r\n        label={props.label} \r\n        required={props.required} \r\n        rules={props.rules}\r\n        defaultValue={ withDataIndex ? props.defaultValue : undefined} \r\n        dataIndex={ withDataIndex ? props.bind : undefined} \r\n        decorator={ withDataIndex ? decorator : undefined}\r\n      >\r\n        {withDataIndex ? null: decorator}\r\n      </FormItem>\r\n}"]}