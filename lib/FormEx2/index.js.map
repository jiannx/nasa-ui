{"version":3,"sources":["../../src/FormEx2/index.jsx"],"names":["React","Component","Form","Row","Col","Button","Icon","Checkbox","Input","Select","Radio","Switch","_","Schema","FormItem","Item","TextArea","RadioGroup","Group","isInstanceOfClass","instance","classConstructor","isPlainObject","isFunction","type","FormEx2","props","validate","key","callback","isSubmit","validateResult","itemLength","values","formItems","filter","x","undefined","length","isAllCheck","result","push","every","status","item","checkValidate","dataIndex","setValues","isValidate","setState","data","setValue","value","cloneDeep","state","set","isEqual","isSuccess","onValidate","onChange","getValue","defaultValue","get","getValues","delValue","ids","split","id","splice","join","validateValue","submit","successCallback","onSubmit","handleSubmit","e","preventDefault","deepClone","elements","newElements","Children","toArray","forEach","isObject","ele","FormEx2Item","addProps","_parent","handleChange","ref","cloneElement","children","defaultValues","nextProps","defaultProps","decorator","renderControl","label","rules","trigger","isShowError","message","validator","required","descriptor","errors","fields","validateStatus","help","onValueChange","target","checked","res","console","info","element","newElement","setTimeout","Object","assign","createElement"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * 基于antd Form 表单组件，目前暂不使用\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Form, Row, Col, Button, Icon, Checkbox, Input, Select, Radio, Switch } from 'antd';\r\nimport _ from 'lodash';\r\nimport Schema from 'async-validator';\r\n\r\n/*\r\n<FormEx\r\n  defaultValues={} // 表单初始数据，默认为空对象\r\n  values={} // 双向绑定数据，todo\r\n  onChange={(values, key, value) => {}}\r\n  onValidate={(isSuccess, validateResult) => {}}\r\n  onSubmit={(values) => {}}\r\n  ref={form => this.form = form}\r\n>\r\n  <FormItem \r\n    // 以下属性参照 antd FormItem\r\n    label=\"\" // 文本\r\n    labelCol // label 标签布局\r\n    wrapperCol // 需要为输入控件设置布局样式时\r\n    help // 提示信息\r\n    extra // 额外的提示信息\r\n    validateStatus // 校验状态\r\n    hasFeedback // 配合 validateStatus 属性使用，展示校验状态图标\r\n    colon={true} // 是否包含冒号\r\n    required={false} // 是否必填\r\n    // 以下是在antd FormItem基础上添加的\r\n    valuePropName=\"value\" // 子节点的值的属性，如 Switch 的是 'checked'\r\n    dataIndex=\"\"  // 绑定字段\r\n    defaultValue={} // 数据不存在时的默认值\r\n    rules={[]|{}} // 规则\r\n    trigger=\"onChange\" // 收集子节点的值的时机\r\n    onChange={(values, key, value) => {}} // 数据变更时回调 \r\n    decorator={<Input></Input>} // 输入控件 请使用InputEx代替Input，TextAreaEx代替TextArea，会自动添加onChange事件，所以请勿定义该事件\r\n  />\r\n</FormEx>\r\n\r\nthis.form.setValues(values); // 设置表单所有数据\r\nthis.form.setValue(key, value); // 设置表单单个数据\r\nthis.form.submit(successCallback = (values) => {}); // 表单验证并回调事件\r\n\r\n */\r\n/*\r\n数据逻辑\r\n输入 => FormItem.onchange => Form.onChange => Form.setState（更新数据至FormItem） => Form调用FormItem的validate生成表单校验结果(更新FormItem的校验状态)，触发外部事件\r\n */\r\n\r\n/*\r\n单个属性默认值\r\n表单内部维护一份数据结构，与外部数据独立\r\n表单提供接口给外部，允许外部设置内部数据\r\n提供表单验证接口，如果通过，则回调事件\r\n表单提供事件，当数据变更时触发\r\n可配置表单验证触发点\r\n针对单个属性，可配置规则\r\n\r\n动态表单\r\n支持Input，multselect，radio，Objec，array\r\n\r\n项目表单中规则\r\n失焦校验无效\r\n所有采用动态校验\r\n添加页面，首次进入，按钮置灰，当表单校验成功后，按钮可点击。重名校验将在提交数据时进行，如果需要单独接口校验，将存在前后台数据校验不一致的时差\r\n编辑页面，首次进入，按钮置灰，当表单校验成功后，按钮可点击。当页面修改至与第一次进入页面时一致时，按钮状态也是可以点击状态，只验证是否编辑过，不验证数据是否一致\r\n */\r\n\r\nconst FormItem = Form.Item;\r\nconst TextArea = Input.TextArea;\r\nconst RadioGroup = Radio.Group;\r\n\r\n\r\nfunction isInstanceOfClass(instance, classConstructor) {\r\n  if (_.isPlainObject(instance) && _.isFunction(instance.type)) {\r\n    return instance.type === classConstructor;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\nclass FormEx2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: _.cloneDeep(props.defaultValues)\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    defaultValues: {}, // 表单初始数据\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate() {}\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // const { defaultValues } = nextProps;\r\n    // this.setState({ data: defaultValues});\r\n  }\r\n\r\n  /**\r\n   * 校验基本函数 外部请勿调用\r\n   * @param  {String}   options.key      [本次校验的key值，将显示该内容框的校验结果]\r\n   * @param  {Function} options.callback [校验完成后的回调函数]\r\n   * @param  {Boolean}  options.isSubmit [是否为submit校验，sumit校验：将在页面上显示所有校验结果]\r\n   */\r\n  validate = ({ key = '', callback = () => {}, isSubmit = false } = {}) => {\r\n    let validateResult = [];\r\n    let itemLength = _.values(this.formItems).filter(x => x !== null && x !== undefined).length;\r\n\r\n    const isAllCheck = (result) => {\r\n      validateResult.push(result);\r\n      // console.log(validateResult);\r\n      if (validateResult.length === itemLength) {\r\n        // 触发外部事件\r\n        callback && callback(validateResult.every(x => x.status === 'success'), validateResult)\r\n      }\r\n    };\r\n    for (let item of _.values(this.formItems)) {\r\n      item && item.checkValidate(item.props.dataIndex === key || isSubmit, isAllCheck);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置表单的数据\r\n   * @param  {Object} values [表单完成数据结构]\r\n   * @param  {Boolen} isValidate [是否进行校验]\r\n   */\r\n  setValues = (values = {}, isValidate = false) => {\r\n    this.setState({ data: values }, () => {\r\n      isValidate && this.validate({ isSubmit: true });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置单个表单数据值，数据变更也是调用该函数\r\n   * @param  {[String]} key   [对应数值在数据中的key,支持多层结构]\r\n   * @param  {[Any]}    value [对应数值在数据中的value]\r\n   */\r\n  setValue = (key, value) => {\r\n    let data = _.cloneDeep(this.state.data);\r\n    _.set(data, key, value);\r\n    // 数据未变更的情况下,不触发事件\r\n    if (_.isEqual(data, this.state.data)) {\r\n      return;\r\n    }\r\n    this.setState({ data }, () => {\r\n      // 数据校验\r\n      this.validate({\r\n        key,\r\n        callback: (isSuccess, validateResult) => {\r\n          this.props.onValidate && this.props.onValidate(isSuccess, validateResult);\r\n        },\r\n        isSubmit: false\r\n      });\r\n      // 触发外部事件\r\n      if (this.props.onChange) {\r\n        // 必须拷贝数据，否则无法刷新\r\n        this.props.onChange(_.cloneDeep(data), key, value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取key值对应的值\r\n   * @param  {[String]} key          [想要获取值的key]\r\n   * @param  {[Any]} defaultValue    [默认值]\r\n   * @return {[Any]}\r\n   */\r\n  getValue = (key = null, defaultValue) => {\r\n    if (key === null) {\r\n      return undefined;\r\n    }\r\n    return _.get(this.state.data, key, defaultValue);\r\n  }\r\n\r\n  /**\r\n   * 获取表单完整数据\r\n   * @return {[Object]}\r\n   */\r\n  getValues = () => {\r\n    return this.state.data;\r\n  }\r\n\r\n  delValue = (key) => {\r\n    let values = this.state.data;\r\n    let ids = key.split('.');\r\n    if (ids.length === 1) {\r\n      delete values[ids[0]];\r\n    } else {\r\n      let id = ids.splice(0, ids.length - 1).join('.');\r\n      values = _.get(values, id, {});\r\n      delete values[ids[ids.length - 1]];\r\n    }\r\n    this.setState({ data: values });\r\n  }\r\n\r\n  /**\r\n   * 校验某个key的值\r\n   * @param  {[type]} key [description]\r\n   */\r\n  validateValue = (key, callback) => {\r\n    this.validate({\r\n      key: key,\r\n      callback: (isSuccess, validateResult) => {\r\n        callback && callback(isSuccess, validateResult);\r\n      },\r\n      isSubmit: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 外部接口 表单外部主动调用提交\r\n   * @param  {[Function]} successCallback [校验成功后的回调函数]\r\n   */\r\n  submit = (successCallback) => {\r\n    this.validate({\r\n      key: null,\r\n      callback: (isSuccess, validateResult) => {\r\n        if (isSuccess) {\r\n          successCallback && successCallback(this.state.data);\r\n          this.props.onSubmit && this.props.onSubmit(this.state.data);\r\n        }\r\n      },\r\n      isSubmit: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 表单内按钮提交方式，将触发props上的onSubmit事件\r\n   * @param  {[type]} e [description]\r\n   * @return {[type]}   [description]\r\n   */\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.validate({\r\n      key: null,\r\n      callback: (isSuccess, validateResult) => {\r\n        isSuccess && this.props.onSubmit && this.props.onSubmit(this.state.data);\r\n      },\r\n      isSubmit: true\r\n    });\r\n  }\r\n\r\n  deepClone = (elements) => {\r\n    let newElements = [];\r\n    React.Children.toArray(elements).forEach(ele => {\r\n      if (!_.isObject(ele)) {\r\n        newElements.push(ele);\r\n      } else if (isInstanceOfClass(ele, FormEx2Item) && ele.props.dataIndex) {\r\n        // dataIndex 未定义时不进行绑定事件\r\n        let addProps = {\r\n          _parent: this, // 存在该值得FromItem才进行自动事件绑定\r\n          data: this.state.data,\r\n          value: this.getValue(ele.props.dataIndex), // 数据中关联的值\r\n          handleChange: this.setValue, // 数据变更调用该事件，在form中setState\r\n          ref: item => this.formItems[ele.props.dataIndex] = item\r\n        };\r\n        let item = React.cloneElement(ele, addProps);\r\n        newElements.push(item);\r\n      } else {\r\n        // fixed: br must with no children\r\n        let children = ele.props.children ? this.deepClone(ele.props.children) : null;\r\n        newElements.push(React.cloneElement(ele, null, children));\r\n      }\r\n    });\r\n    return newElements;\r\n  }\r\n\r\n  render() {\r\n    this.formItems = {};\r\n    let children = this.deepClone(this.props.children);\r\n    return (\r\n      <Form\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        {children}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass FormEx2Item extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...props\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    label: '',\r\n    rules: [],\r\n    trigger: 'onChange',\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate() {}\r\n\r\n  //数据校验及是否显示校验\r\n  checkValidate = (isShowError = true, callback) => {\r\n    let result = {\r\n      dataIndex: this.props.dataIndex,\r\n      status: 'success',\r\n      message: ''\r\n    };\r\n    if (!this.validator) {\r\n      this.rules = _.cloneDeep(this.props.rules);\r\n      if (this.props.required === true) {\r\n        this.rules.push({ required: 'true', message: '必填项' });\r\n      }\r\n      let descriptor = {\r\n        [this.props.dataIndex]: this.rules\r\n      };\r\n      this.validator = new Schema(descriptor);\r\n    }\r\n    if (this.rules.length === 0) {\r\n      callback && callback(result);\r\n      return;\r\n    }\r\n    this.validator.validate({\r\n      [this.props.dataIndex]: this.props.value\r\n    }, (errors, fields) => {\r\n      if (errors) {\r\n        result = {\r\n          dataIndex: this.props.dataIndex,\r\n          status: 'error',\r\n          message: errors[0].message,\r\n          errors: errors\r\n        };\r\n      }\r\n      if (isShowError) {\r\n        this.setState({\r\n          validateStatus: result.status,\r\n          help: result.message\r\n        });\r\n      }\r\n      callback && callback(result);\r\n    });\r\n  }\r\n\r\n  onValueChange = (e) => {\r\n    let value = e;\r\n    if (e && e.target) {\r\n      if (e.target.value !== undefined) {\r\n        value = e.target.value;\r\n      } else {\r\n        value = e.target.checked;\r\n      }\r\n    }\r\n    // FormItem上存在onChange时，调用，并优先使用其返回值\r\n    if (this.props.onChange) {\r\n      // 触发当前接口时，this.state.data为上一次的数据，如需获取本次变更后的数据，需异步处理\r\n      let res = this.props.onChange(this.state.data, this.props.dataIndex, value);\r\n      if (res !== undefined) {\r\n        console.info('reset value', res);\r\n        value = res;\r\n      }\r\n    }\r\n    // 调用表单事件\r\n    this.props.handleChange(this.props.dataIndex, value);\r\n  }\r\n\r\n  renderControl = (element) => {\r\n    if (!element) {\r\n      return null;\r\n    }\r\n\r\n    let newElement = element;\r\n\r\n    // 默认值设定\r\n    if (this.props._parent && this.props.value === undefined && this.props.defaultValue !== undefined) {\r\n      setTimeout(() => {\r\n        this.onValueChange(this.props.defaultValue);\r\n      });\r\n    }\r\n\r\n    let props = Object.assign({}, element.props, {\r\n      value: this.props.value,\r\n      [this.props.trigger]: this.onValueChange\r\n    });\r\n    // 非Form生成的Item直接忽略\r\n    if (!this.props._parent) {\r\n      newElement = element;\r\n    }\r\n    // 替换Input为InputEx\r\n    else if (isInstanceOfClass(element, Input)) {\r\n      newElement = React.createElement(Input, props);\r\n    }\r\n    // TextArea为TextAreaEx\r\n    else if (isInstanceOfClass(element, TextArea)) {\r\n      newElement = React.createElement(TextArea, props);\r\n    }\r\n    // checked处理\r\n    else if (isInstanceOfClass(element, Switch) || isInstanceOfClass(element, Checkbox)) {\r\n      newElement = React.cloneElement(element, {\r\n        checked: this.props.value,\r\n        [this.props.trigger]: this.onValueChange\r\n      });\r\n    }\r\n    // Input,Select等组件拷贝\r\n    else {\r\n      // console.log(element);\r\n      newElement = React.cloneElement(element, props);\r\n    }\r\n    return newElement;\r\n  }\r\n\r\n  render() {\r\n    let decorator = this.renderControl(this.props.decorator);\r\n    return (\r\n      <FormItem {...this.state}>\r\n        {decorator}\r\n        {this.props.children}\r\n      </FormItem>\r\n    )\r\n  }\r\n}\r\nFormEx2.Item = FormEx2Item;\r\n\r\nexport default FormEx2;"]}