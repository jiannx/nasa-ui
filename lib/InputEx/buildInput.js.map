{"version":3,"sources":["../../components/InputEx/buildInput.jsx"],"names":["React","component","props","state","value","nextProps","nextState","setState","createElement","Object","assign","onChange","bind","e","undefined","target","Component"],"mappings":";;;;;;;;AAAA;;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,UAASC,SAAT,EAAoB;AACjC;AAAA;;AACE,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACXA,KADW;;AAEjB,YAAKC,KAAL,GAAa;AACXC,eAAOF,MAAME;AADF,OAAb;AAFiB;AAKlB;;AANH;AAAA;AAAA,0CAQsBC,SARtB,EAQiCC,SARjC,EAQ4C;AACxC,YAAID,UAAUD,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAA/B,IAAwCC,UAAUD,KAAV,KAAoBE,UAAUF,KAA1E,EAAiF;AAC/E,eAAKG,QAAL,CAAc,EAAEH,OAAOC,UAAUD,KAAnB,EAAd;AACD;AACF;AAZH;AAAA;AAAA,+BAcW;AACP,eAAOJ,MAAMQ,aAAN,CAAoBP,SAApB,EAA+BQ,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKR,KAAvB,EAA8B;AAClEE,iBAAO,KAAKD,KAAL,CAAWC,KADgD;AAElEO,oBAAU,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB;AAFwD,SAA9B,CAA/B,CAAP;AAID;AAnBH;AAAA;AAAA,+BAqBWC,CArBX,EAqBc;AACV,YAAI,KAAKX,KAAL,CAAWE,KAAX,KAAqBU,SAAzB,EAAoC;AAClC,eAAKP,QAAL,CAAc;AACZH,mBAAOS,EAAEE,MAAF,CAASX;AADJ,WAAd;AAGD;AACD,aAAKF,KAAL,CAAWS,QAAX,IAAuB,KAAKT,KAAL,CAAWS,QAAX,CAAoBE,CAApB,CAAvB;AACD;AA5BH;;AAAA;AAAA,IAAqCb,MAAMgB,SAA3C;AA8BD","file":"buildInput.js","sourcesContent":["/**\r\n * Help workaround Chinese asynchronously input problem.\r\n * https://github.com/zhaoyao91/react-optimistic-input\r\n */\r\n\r\nimport React from 'react';\r\n\r\nexport default function(component) {\r\n  return class OptimisticInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: props.value\r\n      }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n      if (nextProps.value !== this.props.value && nextProps.value !== nextState.value) {\r\n        this.setState({ value: nextProps.value });\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return React.createElement(component, Object.assign({}, this.props, {\r\n        value: this.state.value,\r\n        onChange: this.onChange.bind(this)\r\n      }))\r\n    }\r\n\r\n    onChange(e) {\r\n      if (this.props.value === undefined) {\r\n        this.setState({\r\n          value: e.target.value\r\n        });\r\n      }\r\n      this.props.onChange && this.props.onChange(e);\r\n    }\r\n  }\r\n}"]}