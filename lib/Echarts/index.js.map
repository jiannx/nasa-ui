{"version":3,"sources":["../../src/Echarts/index.jsx"],"names":["React","Component","Spin","_","loadEcharts","assert","condition","info","Error","Echarts","props","resize","chart","state","document","getElementById","id","clientWidth","clientHeight","height","width","refresh","draw","getInstance","Date","valueOf","Math","random","loading","data","nextProps","isEqual","history","params","setTimeout","entry","onResize","debounce","isAutoResize","window","addEventListener","echarts","dispose","removeEventListener","api","request","setState","isUndefined","isNull","length","Object","assign","then","onResHandler","res","catch","option","isFunction","isPlainObject","merge","console","log","echartsUrl","init","events","keys","name","on","mergeOptions","type","component","setOption","optionIsMerge","className","style","position","left","top","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Spin } from 'antd';\r\nimport _ from 'lodash';\r\nimport { loadEcharts } from './help.js';\r\nimport './style.scss';\r\n\r\nfunction assert(condition, info) {\r\n  if (!condition) {\r\n    throw Error(`Echarts Error: ${info}`);\r\n  }\r\n}\r\n\r\nclass Echarts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const id = (new Date()).valueOf();\r\n    this.state = {\r\n      id: `nase-chart-${id}${Math.random()}`,\r\n      chart: null,\r\n      loading: false,\r\n      data: props.data\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    echartsUrl: 'vendor/echarts/echarts.min.js', // echart库文件地址\r\n    className: '',\r\n    style: null,\r\n    api: null, // Api 请求接口\r\n    params: {}, // Object 请求参数，将优先于history。\r\n    history: [], // array[Object] 请求参数，api参数存在时才有效, 变更此数组，强制刷新图表。保存时间等公共参数\r\n    option: {}, // Object|Function 图表配置项，优先级 该参数>type中定义的配置项\r\n    data: null, // Object 数据项或图表配置项\r\n    loading: null, // bool 受控loading状态\r\n    optionIsMerge: false, // setOption时是否合并数据 http://echarts.baidu.com/api.html#echartsInstance.setOption\r\n    onResHandler: res => res.data, // Function 响应后数据格式化，api参数存在时才有效\r\n    isAutoResize: true, // 自动调整浏览器大小\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // 数据未发生变更时，不做刷新\r\n    if (_.isEqual(this.props.data, nextProps.data) &&\r\n      _.isEqual(this.props.history, nextProps.history) &&\r\n      _.isEqual(this.props.params, nextProps.params)) {\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      this.entry();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.entry();\r\n    this.onResize = _.debounce(() => {\r\n      this.state.chart && this.state.chart.resize();\r\n    }, 500);\r\n    if (this.props.isAutoResize) {\r\n      window.addEventListener('resize', this.onResize);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.echarts && this.state.echarts.dispose(this.state.chart);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  entry() {\r\n    if (this.props.api) {\r\n      this.request();\r\n    } else {\r\n      this.setState({\r\n        data: this.props.data\r\n      }, () => {\r\n        if (_.isUndefined(this.state.data) || _.isNull(this.state.data)) {\r\n          return;\r\n        }\r\n        this.draw();\r\n      });\r\n    }\r\n  }\r\n\r\n  request() {\r\n    if (this.props.history.length === 0) {\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    let params = this.props.history[this.props.history.length - 1];\r\n    this.props.api(Object.assign({}, params || {}, this.props.params)).then(res => {\r\n      let data = this.props.onResHandler(res);\r\n      this.setState({\r\n        data,\r\n        loading: false\r\n      }, () => {\r\n        this.draw();\r\n      });\r\n    }).catch(() => {\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  async mergeOptions() {\r\n    let option = null;\r\n    if (this.props.option) {\r\n      if (_.isFunction(this.props.option)) {\r\n        option = await this.props.option(this.state.data);\r\n      }\r\n      if (_.isPlainObject(this.props.option)) {\r\n        option = _.merge({}, this.state.data, this.props.option);\r\n      }\r\n    } else {\r\n      option = this.state.data;\r\n    }\r\n    return option;\r\n  }\r\n\r\n  async draw() {\r\n    console.log('Echarts draw');\r\n    // 获取echart实例\r\n    let { chart } = this.state;\r\n    if (!chart) {\r\n      let echarts = await loadEcharts(this.props.echartsUrl);\r\n      chart = echarts.init(document.getElementById(this.state.id));\r\n      this.setState({ chart, echarts });\r\n      if (this.props.events) {\r\n        if (!_.isPlainObject(this.props.events)) {\r\n          console.log('Echarts props events must be Object');\r\n        } else {\r\n          for (let name of Object.keys(this.props.events)) {\r\n            chart.on(name, this.props.events[name]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let option = await this.mergeOptions();\r\n    assert(_.isPlainObject(option), 'option must be Object');\r\n    if (option.type === 'react') {\r\n      this.setState({\r\n        component: option.component\r\n      });\r\n    } else {\r\n      this.setState({\r\n        component: null\r\n      });\r\n    }\r\n    chart.setOption(option, !this.props.optionIsMerge);\r\n  }\r\n\r\n  // 调整大小，不重绘\r\n  resize = () => {\r\n    let { chart } = this.state;\r\n    let { clientWidth, clientHeight } = document.getElementById(this.state.id);\r\n    chart.resize({ height: clientHeight, width: clientWidth });\r\n  }\r\n\r\n  // 重绘\r\n  refresh = () => {\r\n    this.draw();\r\n  }\r\n\r\n  getInstance = () => {\r\n    return this.state.chart;\r\n  }\r\n\r\n  render() {\r\n    let loading = this.state.loading;\r\n    if (this.props.loading === false || this.props.loading === true) {\r\n      loading = this.props.loading;\r\n    }\r\n\r\n    return (\r\n      <div className={`nase-chart ${this.props.className}`} style={this.props.style}>\r\n        <Spin spinning={loading} delay={0} className=\"spin-loading\">\r\n          <div id={this.state.id} style={{width: '100%', height: '100%'}}></div>\r\n          { this.state.component && \r\n            <div style={{width: '100%', height: '100%', position: 'absolute', left: '0', top: '0'}}>{this.state.component}</div>\r\n          }\r\n        </Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Echarts;"]}