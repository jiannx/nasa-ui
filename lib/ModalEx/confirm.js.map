{"version":3,"sources":["../../src/ModalEx/confirm.jsx"],"names":["React","Component","ReactDOM","Modal","Button","_","CONFIRM_OPTIONS","title","data","closeBtn","onOk","DIV_ID","createElement","t","Date","id","valueOf","el","document","getElementById","setAttribute","body","appendChild","confirm","options","Object","assign","content","handleCancel","unmountComponentAtNode","onCancel","handleSuccess","handleOk","isFunction","contentElement","isString","cloneElement","ref","modal","ok","close","footer","okType","okText","className","render"],"mappings":"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","file":"confirm.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Modal, Button } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nconst CONFIRM_OPTIONS = {\r\n  title: '',\r\n  data: {},\r\n  closeBtn: true, // 是否包含右上角关闭及取消按钮\r\n  onOk: () => {},\r\n};\r\nconst DIV_ID = 'modal-ex-container';\r\n\r\nfunction createElement() {\r\n  let t = new Date();\r\n  let id = `${DIV_ID}-${t.valueOf()}`;\r\n  let el = document.getElementById(id);\r\n  if (!el) {\r\n    el = document.createElement('div');\r\n    el.setAttribute('id', id);\r\n    document.body.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\nconst confirm = (options) => {\r\n  options = Object.assign({}, CONFIRM_OPTIONS, options);\r\n  let el = createElement();\r\n  let content = null;\r\n\r\n  const handleCancel = () => {\r\n    ReactDOM.unmountComponentAtNode(el);\r\n    options.onCancel && options.onCancel();\r\n  }\r\n\r\n  // content 内部逻辑完成后回调\r\n  const handleSuccess = () => {\r\n    // 出发option中回调并关闭弹窗\r\n    options.onOk && options.onOk();\r\n    ReactDOM.unmountComponentAtNode(el);\r\n  }\r\n\r\n  const handleOk = () => {\r\n    // 每个content需提供一个handleOk\r\n    if (content && content.handleOk && _.isFunction(content.handleOk)) {\r\n      content.handleOk(handleSuccess);\r\n    } else {\r\n      options.onOk && options.onOk(() => {\r\n        ReactDOM.unmountComponentAtNode(el);\r\n      });\r\n      // console.log('modalEx confirm: content 未定义handleOk');\r\n    }\r\n  }\r\n\r\n  let contentElement = null;\r\n  if (_.isString(options.content)) {\r\n    contentElement = options.content;\r\n  } else {\r\n    contentElement = React.cloneElement(options.content, {\r\n      ref: t => { content = t },\r\n      // 给内部content调用，调用当时this.props.modal.close();\r\n      modal: {\r\n        ok: handleOk,\r\n        close: handleCancel\r\n      }\r\n    });\r\n  }\r\n  // 是否包含取消按钮\r\n  if (options.closeBtn === false) {\r\n    options.footer = <Button size=\"large\" type={options.okType ? options.okType : 'primary'} onClick={handleOk}>{options.okText ? options.okText : '确定'}</Button>;\r\n    if (!options.className) {\r\n      options.className = 'nasa-modal-no-close';\r\n    } else {\r\n      options.className += ' nasa-modal-no-close';\r\n    }\r\n  }\r\n\r\n  ReactDOM.render((\r\n    <Modal\r\n      maskClosable={true}\r\n      {...options}\r\n      visible={true}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n    >\r\n      {contentElement}\r\n    </Modal>\r\n  ), el);\r\n};\r\n\r\nexport default confirm;"]}